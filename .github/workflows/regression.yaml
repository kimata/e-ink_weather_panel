name: Regression
on:
    push:

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Cache node modules
              id: cache-node-modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies
              if: steps.cache-nodemodules.outputs.cache-hit != 'true'
              run: |
                  npm ci
              working-directory: ./react

            - name: Build
              run: |
                  npm run build
              working-directory: ./react

            - name: Upload built file
              uses: actions/upload-artifact@v3
              with:
                  name: react-built
                  path: react/build

    test:
        needs: build
        runs-on: ubuntu-latest

        strategy:
            matrix:
                python-version: ["3.10"]

        steps:
            - uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Download a single artifact
              uses: actions/download-artifact@v3
              with:
                  name: react-built

            - name: Install Poetry
              run: |
                  curl -sSL https://install.python-poetry.org | python3 -

            - name: Add path for Poetry
              run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

            - name: Cache python modules
              id: cache-python-modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-python-modules
              with:
                  path: $HOME/.cache
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pyproject.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies
              run: poetry install --no-interaction

            - name: Run Tests
              run: poetry run pytest --cov=lib --cov=app --cov-config=.coveragerc --cov-branch --cov-report=html --capture=no tests/test_basic.py

            - name: Upload coverage file
              uses: actions/upload-artifact@v3
              with:
                  name: pytest
                  path: tests/evidence
