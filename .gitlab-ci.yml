image: docker:23.0

stages:
  - test
  - build
  - deploy

# サンプル設定ファイルで，問題なく動くかチェック
test-sample:
  stage: test
    
  script:
    - docker pull ${CI_REGISTRY_IMAGE} || true
    - docker build . -t ${CI_REGISTRY_IMAGE}
    - docker run -t ${CI_REGISTRY_IMAGE} src/create_image.py -f config.example.yaml -o ${CI_JOB_NAME}.png
    - docker push ${CI_REGISTRY_IMAGE}
    - docker cp `docker ps -l -q`:/opt/e-ink_weather/${CI_JOB_NAME}.png .

  artifacts:
    paths:
      - ${CI_JOB_NAME}.png
    
# 本番設定ファイルで，問題なく動くかチェック
build-image:
  stage: build
  image: registry.green-rabbit.net:5000/kimata/ubuntu-docker-build:latest
  variables:
    RASP_HOSTNAME: rasp-meter-1

  script:
    - id
    - ls -la
    - export GIT_SSL_NO_VERIFY=1
    - git clone https://gitlab.green-rabbit.net/kimata/panel_config.git
    - mv panel_config/e-ink_weather.yaml config.yaml
    - mkdir key
    - mv panel_config/panel.id_rsa key
    - rm -rf font
    - git clone https://gitlab.green-rabbit.net/kimata/font.git
    - docker pull ${CI_REGISTRY_IMAGE} || true
    - docker build . -t ${CI_REGISTRY_IMAGE}
    - docker run -t ${CI_REGISTRY_IMAGE} src/create_image.py -f config.yaml -o ${CI_JOB_NAME}.png
    - docker run -t ${CI_REGISTRY_IMAGE} src/display_image.py -f config.yaml -h ${RASP_HOSTNAME} -c 1
    - docker push ${CI_REGISTRY_IMAGE}
    - docker cp `docker ps -l -q`:/opt/e-ink_weather/${CI_JOB_NAME}.png .

  artifacts:
    paths:
      - ${CI_JOB_NAME}.png

deploy:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config get-contexts
    - kubectl config use-context kimata/e-ink_weather_panel:pod-rollout
    - kubectl --insecure-skip-tls-verify=true rollout restart -n panel deployment e-ink-weather-panel-deployment
