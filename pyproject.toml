[tool.poetry]
name = "e-ink_weather_panel"
version = "0.1.0"
description = "電子ペーパディスプレイに，Raspberry Pi を通じて下記の情報を表示するためのスクリプトです．"
authors = ["KIMATA Tetsuya <kimata@green-rabbit.net>"]

[tool.poetry.dependencies]
Flask = "^2.3.2"
Flask-Cors = "^4.0.0"
PyYAML = "^6.0"
coloredlogs = "^15.0.1"
docopt = "^0.6.2"
influxdb-client = {extras = ["ciso"], version = "^1.36.1"}
lxml = "^4.9.3"
matplotlib = "^3.7.2"
pandas = "^2.0.3"
paramiko = "^3.3.1"
python = "^3.10"
selenium = "^4.10.0"
slack-sdk = "^3.21.3"
opencv-contrib-python-headless = "^4.8.0.76"

[tool.poetry.group.test.dependencies]
flaky = "^3.7.0"
playwright = "^1.36.0"
pytest-cov = "^4.1.0"
pytest-freezegun = "^0.4.2"
pytest-html = "^3.2.0"
pytest-mock = "^3.11.1"
pytest-playwright = "^0.3.3"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--verbose --cov=app --cov=lib --capture=sys --cov-report=html --html=tests/evidence/index.htm --self-contained-html"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore:The hookimpl CovPlugin.pytest_configure_node uses",
    "ignore:The hookimpl CovPlugin.pytest_testnodedown uses"
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.:",

  # 以下，未使用関数

  # config.py
  "def get_db_config",

  # logger.py
  "class GZipRotator",
  "def log_formatter",
  "if log_dir_path is not None:",
  "if log_queue is not None:",
  "if is_str_log:",

  # sensor_data.py
  "def get_equip_on_minutes",
  "def get_equip_mode_period",
  "def get_day_sum",
  "def dump_data",

  # notify_slack.py
  "def info",

  # flask_util.py
  "def remote_host",
  "def auth_user",

  # selenium_util.py
  "def is_display",
  "def random_sleep",
  "def wait_patiently",
  "def dump_page",
  "def clean_dump",
  "def get_memory_info",
  "def log_memory_usage",
]

[tool.coverage.html]
directory = "tests/evidence/coverage"

[tool.black]
target-version = ['py310']
line-length = 100


[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 5
include_trailing_comma = true


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
